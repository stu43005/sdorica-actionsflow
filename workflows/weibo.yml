on:
  rsshub:
    path: /weibo/user/5464702529
    config:
      skipOnError: true
      format: |
        if (item.description) {
          item.content = item.description.replace(/<br\/?>/g, "\n").replace(/<[^>]*>/g, "").trim()
          if (item.content.length > 1000) {
            item.content = `${item.content.substring(0, 997)}...`
          }
        }
        let matchImgs = item.description.match(/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()!@:%_\+.~#?&\/\/=]*)/g)
        item.images = matchImgs?.filter(url => /\.(gif|jpe?g|tiff?|png|webp|bmp)$/i.test(url)) ?? []
        const format = (item, username, author, footer) => {
          const payload = {
            "username": username,
            "content": `<${item.link}>`,
            "embeds": [
              {
                "author": author,
                "description": item.content,
                "footer": footer
              }
            ]
          };
          if (item.images.length > 0) {
            payload["embeds"][0]["image"] = {
              "url": item.images[0]
            };
            if (item.images.length > 1) {
              payload["embeds"].push(...item.images.slice(1).map(img => ({
                "image": {
                  "url": img
                }
              })));
            }
          }
          // console.log(JSON.stringify(payload));
          return payload;
        };
        const payload = format(item, "万象物语的微博", {
          "name": "万象物语",
          "url": "https://www.weibo.com/sdorica",
          "icon_url": "https://cdn.discordapp.com/attachments/543454386873958413/778653459904987167/005XPkLnly8gik6l3thcnj30sg0sgkjl.png"
        }, {
          "text": "微博",
          "icon_url": "https://cdn.discordapp.com/attachments/543454386873958413/778653585885495316/1200px-Sina_Weibo_logo.png"
        });
        return {
          ...item,
          payload,
        };

jobs:
  discord:
    name: Send a message to discord
    runs-on: ubuntu-latest
    steps:
      - name: Discord notification
        uses: actionsflow/axios@v1
        with:
          url: ${{ secrets.DISCORD_WEBHOOK_NEWS_FEED }}
          method: 'POST'
          data: ${{ toJSON(on.facebook.outputs.payload) }}
